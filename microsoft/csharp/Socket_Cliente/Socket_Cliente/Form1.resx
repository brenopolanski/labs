<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>